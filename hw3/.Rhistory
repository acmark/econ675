logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
View(b.hat)
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
install.packages("data.table")
install.packages("data.table")
###################################################################
# ECON 675, Assignment 3
# Fall 2018
# University of Michigan
# Latest update: Oct 22, 2018
###################################################################
rm(list=ls(all=TRUE))
library(foreign); library(MASS);
library(boot)
library(data.table)
library(foreach)
library(data.table)
library(Matrix)
library(ggplot2)
library(sandwich)
library(xtable)
library(gmm)
setwd("/Users/erinmarkiewitz/Dropbox/Phd_Coursework/Econ675/hw3")
# load the data
pisofirme <- read.csv("pisofirme.csv", header = TRUE)
pisoframe = as.data.frame(pisofirme)
complete  <- complete.cases(pisofirme[, 5:27])
pisofirme <- pisofirme[complete, ]
# s_i: non-missing indicator
pisofirme$log_inc <- log(pisofirme$S_incomepc+1)
pisofirme$nmissing <- 1 - pisofirme$dmissing
pisoframe = as.data.frame(pisofirme)
pisoframe[,s:= 1-dmissing]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
update.packages()
###################################################################
# ECON 675, Assignment 3
# Fall 2018
# University of Michigan
# Latest update: Oct 22, 2018
###################################################################
rm(list=ls(all=TRUE))
library(foreign); library(MASS);
library(boot)
library(data.table)
library(foreach)
library(data.table)
library(Matrix)
library(ggplot2)
library(sandwich)
library(xtable)
library(gmm)
setwd("/Users/erinmarkiewitz/Dropbox/Phd_Coursework/Econ675/hw3")
# load the data
pisofirme <- read.csv("pisofirme.csv", header = TRUE)
pisoframe = as.data.frame(pisofirme)
complete  <- complete.cases(pisofirme[, 5:27])
pisofirme <- pisofirme[complete, ]
# s_i: non-missing indicator
pisofirme$log_inc <- log(pisofirme$S_incomepc+1)
pisofirme$nmissing <- 1 - pisofirme$dmissing
pisoframe = as.data.frame(pisofirme)
pisoframe[,s:= 1-dmissing]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
###################################################################
# Q 1_9 a
###################################################################
#estimate logit model
logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
V.hat   <- vcovHC(logit_q1, type = "HC1")
se.hat  <- as.data.table(sqrt(diag(V.hat)))
#compute t-stats and p values
t.stat <- b.hat/se.hat
n = nrow(pisofirme)
d = 4
p = round(2*pt(abs(t.stat[[1]]),df=n-d,lower.tail=FALSE),3)
#compute CI
CI.lower = b.hat - qnorm(0.975)*se.hat
CI.upper = b.hat + qnorm(0.975)*se.hat
results.a  = as.data.frame(cbind(b.hat,se.hat,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","SE","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("Const.", "S_age","S_HHpeople","log_inc")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
View(b.hat)
# Get Piso Firme data
pisoframe <- as.data.table(read.csv('pisofirme.csv'))
# Create dependent variable for logistic regression
pisoframe[,s:= 1-dmissing]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
###################################################################
# ECON 675, Assignment 3
# Fall 2018
# University of Michigan
# Latest update: Oct 22, 2018
###################################################################
rm(list=ls(all=TRUE))
library(foreign); library(MASS);
library(boot)
library(data.table)
library(foreach)
library(data.table)
library(Matrix)
library(ggplot2)
library(sandwich)
library(xtable)
library(gmm)
setwd("/Users/erinmarkiewitz/Dropbox/Phd_Coursework/Econ675/hw3")
# load the data
pisofirme <- read.csv("pisofirme.csv", header = TRUE)
complete  <- complete.cases(pisofirme[, 5:27])
pisofirme <- pisofirme[complete, ]
# s_i: non-missing indicator
pisofirme$log_inc <- log(pisofirme$S_incomepc+1)
pisofirme$nmissing <- 1 - pisofirme$dmissing
pisoframe = as.data.frame(pisofirme)
# Get Piso Firme data
pisoframe <- as.data.table(read.csv('pisofirme.csv'))
# Create dependent variable for logistic regression
pisoframe[,s:= 1-dmissing]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
###################################################################
# Q 1_9 a
###################################################################
#estimate logit model
logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
V.hat   <- vcovHC(logit_q1, type = "HC1")
se.hat  <- as.data.table(sqrt(diag(V.hat)))
#compute t-stats and p values
t.stat <- b.hat/se.hat
n = nrow(pisofirme)
d = 4
p = round(2*pt(abs(t.stat[[1]]),df=n-d,lower.tail=FALSE),3)
#compute CI
CI.lower = b.hat - qnorm(0.975)*se.hat
CI.upper = b.hat + qnorm(0.975)*se.hat
results.a  = as.data.frame(cbind(b.hat,se.hat,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","SE","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("Const.", "S_age","S_HHpeople","log_inc")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
######################
###################################################################
# ECON 675, Assignment 3
# Fall 2018
# University of Michigan
# Latest update: Oct 22, 2018
###################################################################
rm(list=ls(all=TRUE))
library(foreign); library(MASS);
library(boot)
library(data.table)
library(foreach)
library(data.table)
library(Matrix)
library(ggplot2)
library(sandwich)
library(xtable)
library(gmm)
setwd("/Users/erinmarkiewitz/Dropbox/Phd_Coursework/Econ675/hw3")
# load the data
pisofirme <- read.csv("pisofirme.csv", header = TRUE)
complete  <- complete.cases(pisofirme[, 5:27])
pisofirme <- pisofirme[complete, ]
# s_i: non-missing indicator
pisofirme$log_inc <- log(pisofirme$S_incomepc+1)
pisofirme$nmissing <- 1 - pisofirme$dmissing
pisoframe = as.data.frame(pisofirme)
# Get Piso Firme data
pisoframe <- as.data.table(read.csv('pisofirme.csv'))
# Create dependent variable for logistic regression
pisoframe[,nmissing:= 1-dmissing]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
###################################################################
# Q 1_9 a
###################################################################
#estimate logit model
logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
V.hat   <- vcovHC(logit_q1, type = "HC1")
se.hat  <- as.data.table(sqrt(diag(V.hat)))
#compute t-stats and p values
t.stat <- b.hat/se.hat
n = nrow(pisofirme)
d = 4
p = round(2*pt(abs(t.stat[[1]]),df=n-d,lower.tail=FALSE),3)
#compute CI
CI.lower = b.hat - qnorm(0.975)*se.hat
CI.upper = b.hat + qnorm(0.975)*se.hat
results.a  = as.data.frame(cbind(b.hat,se.hat,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","SE","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("Const.", "S_age","S_HHpeople","log_inc")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
###################################################################
# Q 1_9 b
###################################################################
# set up logistic bootstrap
boot.logit <- function(data, i){
logit  <- glm(nmissing ~ S_age + S_HHpeople + +I(log(S_incomepc+1)),
data = data[i, ], family = "binomial")
V      <- vcovHC(logit, type = "HC1")
se     <- sqrt(diag(V.hat))
t.boot <- (coef(logit)-coef(logit_q1))/se
return(t.boot)
}
# run logistic bootstrap
set.seed(123)
boot.out <- boot(data=pisofirme, R=499, statistic = boot.logit, stype = "i")
# back out quantiles of boot t-dist. for CIs
boot.quant <- sapply(1:4, function (i) quantile(boot.out$t[,i], c(0.025, 0.975)))
#CIs
boot.ci.lower = b.hat + t(boot.quant)[,1]*se.hat
boot.ci.upper = b.hat + t(boot.quant)[,2]*se.hat
boot.p = sapply(1:4,function(i) 1/499*sum(boot.out$t[,i]>=t.stat[i]))
# Tabulate bootstrap results
results.b  = as.data.frame(cbind(b.hat,boot.ci.lower,boot.ci.upper,boot.p))
colnames(results.b) = c("Coef.","CI.lower","CI.upper","p-val")
rownames(results.b) = c("Const.", "S_age","S_HHpeople","log_inc")
# Get latex table output
xtable(results.b,digits=3)
print(xtable(results.b, type = "latex"), file = "hw3_q1_9b_r.tex")
###################################################################
# Q 1_9 C
###################################################################
# subset data
X  = pisoframe[, c("S_age","S_HHpeople","log_inc")]
X$const = 1
setcolorder(X,c("const","S_age","S_HHpeople","log_inc"))
b.hat = coef(logit_q1)
# Construct link function
mu = function(u){(1+exp(-u))^(-1)}
# Construct vector of x_i'*beta.hats
XB = as.matrix(X)%*%b.hat
# Compute predicted probabilities
mu.hat = mu(XB)
X[,mu.hat:=mu.hat]
#Make plot
plot(density(mu.hat,kernel="e", adjust = 5, bw="ucv",na.rm=TRUE),main="Kernel Density Estimate")
dev.copy(png,'hw3_q1_9c_r.png')
dev.off()
#estimate logit model
logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
V.hat   <- vcovHC(logit_q1, type = "HC1")
se.hat  <- as.data.table(sqrt(diag(V.hat)))
#compute t-stats and p values
t.stat <- b.hat/se.hat
n = nrow(pisofirme)
d = 4
p = round(2*pt(abs(t.stat[[1]]),df=n-d,lower.tail=FALSE),3)
#compute CI
CI.lower = b.hat - qnorm(0.975)*se.hat
CI.upper = b.hat + qnorm(0.975)*se.hat
results.a  = as.data.frame(cbind(b.hat,V.hat,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","V","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("S_age","S_HHpeople","log_inc","Const.")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
###################################################################
# ECON 675, Assignment 3
# Fall 2018
# University of Michigan
# Latest update: Oct 22, 2018
###################################################################
rm(list=ls(all=TRUE))
library(foreign); library(MASS);
library(boot)
library(data.table)
library(foreach)
library(data.table)
library(Matrix)
library(ggplot2)
library(sandwich)
library(xtable)
library(gmm)
setwd("/Users/erinmarkiewitz/Dropbox/Phd_Coursework/Econ675/hw3")
# load the data
pisofirme <- read.csv("pisofirme.csv", header = TRUE)
complete  <- complete.cases(pisofirme[, 5:27])
pisofirme <- pisofirme[complete, ]
# s_i: non-missing indicator
pisofirme$log_inc <- log(pisofirme$S_incomepc+1)
pisofirme$nmissing <- 1 - pisofirme$dmissing
pisoframe = as.data.frame(pisofirme)
# Get Piso Firme data
pisoframe <- as.data.table(read.csv('pisofirme.csv'))
# Create dependent variable for logistic regression
pisoframe[,nmissing:= 1-dmissing]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
# Create income regressor
pisoframe[,log_inc:= log(S_incomepc+1)]
###################################################################
# Q 1_9 a
###################################################################
#estimate logit model
logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
V.hat   <- vcovHC(logit_q1, type = "HC1")
se.hat  <- as.data.table(sqrt(diag(V.hat)))
#compute t-stats and p values
t.stat <- b.hat/se.hat
n = nrow(pisofirme)
d = 4
p = round(2*pt(abs(t.stat[[1]]),df=n-d,lower.tail=FALSE),3)
#compute CI
CI.lower = b.hat - qnorm(0.975)*se.hat
CI.upper = b.hat + qnorm(0.975)*se.hat
results.a  = as.data.frame(cbind(b.hat,V.hat,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","V","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("S_age","S_HHpeople","log_inc","Const.")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
View(V.hat)
V.out =diag(V.hat)
results.a  = as.data.frame(cbind(b.hat,V.out,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","V","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("S_age","S_HHpeople","log_inc","Const.")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
# Get latex table output
xtable(results.a,digits=3)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
xtable(results.a,digits=4)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
# Get latex table output
xtable(results.a,digits=5)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
# Get latex table output
xtable(results.a,digits=5)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
# Get latex table output
xtable(results.a)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
#estimate logit model
logit_q1 <- glm(nmissing ~ S_age + S_HHpeople + log_inc,
family = "binomial", data = pisoframe)
#extract point estimates and calculate standard errors
b.hat   <- as.data.table(logit_q1["coefficients"])
V.hat   <- vcovHC(logit_q1, type = "HC1")
se.hat  <- as.data.table(sqrt(diag(V.hat)))
V.out <- diag(V.hat)
#compute t-stats and p values
t.stat <- b.hat/se.hat
n = nrow(pisofirme)
d = 4
p = round(2*pt(abs(t.stat[[1]]),df=n-d,lower.tail=FALSE),3)
#compute CI
CI.lower = b.hat - qnorm(0.975)*se.hat
CI.upper = b.hat + qnorm(0.975)*se.hat
results.a  = as.data.frame(cbind(b.hat,V.out,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","V","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("S_age","S_HHpeople","log_inc","Const.")
# Get latex table output
xtable(results.a,digits=5)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
results.a  = as.data.frame(cbind(b.hat,V.out,t.stat,p,CI.lower,CI.upper))
colnames(results.a) = c("Coef.","V","t-stat","p-val","CI.lower","CI.upper")
rownames(results.a) = c("Const.", "S_age","S_HHpeople","log_inc")
# Get latex table output
xtable(results.a,digits=5)
print(xtable(results.a, type = "latex"), file = "hw3_q1_9a_r.tex")
# set up logistic bootstrap
boot.logit <- function(data, i){
logit  <- glm(nmissing ~ S_age + S_HHpeople + +I(log(S_incomepc+1)),
data = data[i, ], family = "binomial")
V      <- vcovHC(logit, type = "HC1")
se     <- sqrt(diag(V.hat))
t.boot <- (coef(logit)-coef(logit_q1))/se
return(t.boot)
}
# run logistic bootstrap
set.seed(123)
boot.out <- boot(data=pisofirme, R=499, statistic = boot.logit, stype = "i")
# back out quantiles of boot t-dist. for CIs
boot.quant <- sapply(1:4, function (i) quantile(boot.out$t[,i], c(0.025, 0.975)))
#CIs
boot.ci.lower = b.hat + t(boot.quant)[,1]*se.hat
boot.ci.upper = b.hat + t(boot.quant)[,2]*se.hat
boot.p = sapply(1:4,function(i) 1/499*sum(boot.out$t[,i]>=t.stat[i]))
# Tabulate bootstrap results
results.b  = as.data.frame(cbind(b.hat,boot.ci.lower,boot.ci.upper,boot.p))
colnames(results.b) = c("Coef.","CI.lower","CI.upper","p-val")
rownames(results.b) = c("Const.", "S_age","S_HHpeople","log_inc")
# Get latex table output
xtable(results.b,digits=4)
print(xtable(results.b, type = "latex"), file = "hw3_q1_9b_r.tex")
source('~/Dropbox/Phd_Coursework/Econ675/hw3/hw3_q3.R', echo=TRUE)
x.quant = range(c(0, 1, 100))
x.exp = dexp(x.quant, rate = 1, log = FALSE)
lines(x,x.exp,col="green")
lines(x.quant,x.exp,col="green")
plot(h2,freq=FALSE,main="Distribution of Parametric Bootstrap Statistic",xlab="Parametric bootstrap statistic",ylim=c(0,0.4),xlim=c(0,8))
lines(x.quant,x.exp,col="green")
###################################################################
# Q 2.2 MCAR
###################################################################
# GMM moment condition: logistic
g_logistic <- function(theta, data) {
a <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
data$dpisofirme
b <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
data$S_age
c <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
data$S_HHpeople
d <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
log(1+data$S_incomepc)
cbind(a, b, c, d)
}
# logistic bootstrap
boot.T_logistic <- function(boot.data, ind) {
gmm(g_logistic, boot.data[ind, ], t0=c(0,0,0,0), wmatrix="ident", vcov="iid")$coef
}
ptm <- proc.time()
set.seed(123)
temp <- boot(data=pisofirme[pisofirme$nmissing==1, ], R=499, statistic = boot.T_logistic, stype = "i")
proc.time() - ptm
table3 <- matrix(NA, ncol=6, nrow=4)
for (i in 1:4) {
table3[i, 1] <- temp$t0[i]
table3[i, 2] <- sd(temp$t[, i])
table3[i, 3] <- table3[i, 1] / table3[i, 2]
table3[i, 4] <- 2 * max( mean(temp$t[, i]-temp$t0[i]>=abs(temp$t0[i])), mean(temp$t[, i]-temp$t0[i]<=-1*abs(temp$t0[i])) )
table3[i, 5] <- 2 * temp$t0[i] - quantile(temp$t[, i], 0.975)
table3[i, 6] <- 2 * temp$t0[i] - quantile(temp$t[, i], 0.025)
}
rownames(table3)=c("dpisofirme", "S_age","S_HHpeople","log_inc")
colnames(table3)=c("Estimate", "Std.Error", "t", "p-value", "CI.lower","CI.upper")
xtable(table3,digits=3)
print(xtable(table3, type = "latex"), file = "hw3_q2_2_r.tex")
source('~/Dropbox/Phd_Coursework/Econ675/hw3/hw3_q2.R', echo=TRUE)
xtable(table5,digits=3)
print(xtable(table3, type = "latex"), file = "hw3_q2_3c_r.tex")
print(xtable(table5, type = "latex"), file = "hw3_q2_3c_r.tex")
# GMM moment condition with trimming
g_MAR2 <- function(theta, data) {
data <- data[data$nmissing==1 & data$weights<=1/0.1, ]
a <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
data$dpisofirme * data$weights
b <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
data$S_age * data$weights
c <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
data$S_HHpeople * data$weights
d <- (data$danemia - plogis(theta[1]*data$dpisofirme + theta[2]*data$S_age + theta[3]*data$S_HHpeople + theta[4]*log(1+data$S_incomepc))) *
log(1+data$S_incomepc) * data$weights
cbind(a, b, c, d)
}
# logistic bootstrap
boot.T_MAR2 <- function(boot.data, ind) {
data.temp <- boot.data[ind, ]
fitted <- glm(nmissing ~ dpisofirme + S_age + S_HHpeople +I(log(S_incomepc+1)) - 1,
data = data.temp,
family = binomial(link = "logit"))$fitted
data.temp$weights <- 1 / fitted
gmm(g_MAR2, data.temp, t0=c(0,0,0,0), wmatrix="ident", vcov="iid")$coef
}
ptm <- proc.time()
set.seed(123)
temp <- boot(data=pisofirme, R=499, statistic = boot.T_MAR2, stype = "i")
proc.time() - ptm
table6 <- matrix(NA, ncol=6, nrow=4)
for (i in 1:4) {
table6[i, 1] <- temp$t0[i]
table6[i, 2] <- sd(temp$t[, i])
table6[i, 3] <- table6[i, 1] / table6[i, 2]
table6[i, 4] <- 2 * max( mean(temp$t[, i]-temp$t0[i]>=abs(temp$t0[i])), mean(temp$t[, i]-temp$t0[i]<=-1*abs(temp$t0[i])) )
table6[i, 5] <- 2 * temp$t0[i] - quantile(temp$t[, i], 0.975)
table6[i, 6] <- 2 * temp$t0[i] - quantile(temp$t[, i], 0.025)
}
rownames(table5)=c("dpisofirme", "S_age","S_HHpeople","log_inc")
colnames(table5)=c("Estimate", "Std.Error", "t", "p-value", "CI.lower","CI.upper")
xtable(table6,digits=3)
print(xtable(table6, type = "latex"), file = "hw3_q2_3c_r.tex")
print(xtable(table6, type = "latex"), file = "hw3_q2_3d_r.tex")
rownames(table6)=c("dpisofirme", "S_age","S_HHpeople","log_inc")
colnames(table6)=c("Estimate", "Std.Error", "t", "p-value", "CI.lower","CI.upper")
xtable(table6,digits=3)
print(xtable(table6, type = "latex"), file = "hw3_q2_3d_r.tex")
